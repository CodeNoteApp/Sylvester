//  SKNotificationKind.swift
//  Sylvester ðŸ˜¼
//
//  Created by the 'generate_boilerplate.swift' script on 2025/08/30.

/// - Warning: This enumeration is generated by the 'generate_boilerplate.swift' script.
///            You can update this enumeration by running `make generate-boilerplate`.
public enum SKNotificationKind: String, Equatable, Codable, CodingKey, CaseIterable, SourceKitUID {
    /// The `source.notification.editor.documentupdate` SourceKit key.
    case editorDocumentupdate = "source.notification.editor.documentupdate"
    /// The `source.notification.test` SourceKit key.
    case test = "source.notification.test"
    /// The `source.notification.sema_enabled` SourceKit key.
    case semaEnabled = "source.notification.sema_enabled"
    /// The `source.notification.compile-will-start` SourceKit key.
    case compileWillStart = "source.notification.compile-will-start"
    /// The `source.notification.compile-did-finish` SourceKit key.
    case compileDidFinish = "source.notification.compile-did-finish"

    @_spi(Macro)
    public static var caseMap: [String: String] {
        [
        "editorDocumentupdate": "source.notification.editor.documentupdate",
        "test": "source.notification.test",
        "semaEnabled": "source.notification.sema_enabled",
        "compileWillStart": "source.notification.compile-will-start",
        "compileDidFinish": "source.notification.compile-did-finish",
        ]
    }
}
