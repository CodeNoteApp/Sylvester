//  SKKey.swift
//  Sylvester ðŸ˜¼
//
//  Created by the 'generate_boilerplate.swift' script on 2025/08/30.

/// - Warning: This enumeration is generated by the 'generate_boilerplate.swift' script.
///            You can update this enumeration by running `make generate-boilerplate`.
public enum SKKey: String, Equatable, Codable, CodingKey, CaseIterable, SourceKitUID {
    /// The `key.codecomplete.sort.byname` SourceKit key.
    case codecompleteSortByname = "key.codecomplete.sort.byname"
    /// The `key.codecomplete.sort.useimportdepth` SourceKit key.
    case codecompleteSortUseimportdepth = "key.codecomplete.sort.useimportdepth"
    /// The `key.codecomplete.group.overloads` SourceKit key.
    case codecompleteGroupOverloads = "key.codecomplete.group.overloads"
    /// The `key.codecomplete.group.stems` SourceKit key.
    case codecompleteGroupStems = "key.codecomplete.group.stems"
    /// The `key.codecomplete.filtertext` SourceKit key.
    case codecompleteFiltertext = "key.codecomplete.filtertext"
    /// The `key.codecomplete.requestlimit` SourceKit key.
    case codecompleteRequestlimit = "key.codecomplete.requestlimit"
    /// The `key.codecomplete.requeststart` SourceKit key.
    case codecompleteRequeststart = "key.codecomplete.requeststart"
    /// The `key.codecomplete.hideunderscores` SourceKit key.
    case codecompleteHideunderscores = "key.codecomplete.hideunderscores"
    /// The `key.codecomplete.hidelowpriority` SourceKit key.
    case codecompleteHidelowpriority = "key.codecomplete.hidelowpriority"
    /// The `key.codecomplete.hidebyname` SourceKit key.
    case codecompleteHidebyname = "key.codecomplete.hidebyname"
    /// The `key.codecomplete.includeexactmatch` SourceKit key.
    case codecompleteIncludeexactmatch = "key.codecomplete.includeexactmatch"
    /// The `key.codecomplete.addinnerresults` SourceKit key.
    case codecompleteAddinnerresults = "key.codecomplete.addinnerresults"
    /// The `key.codecomplete.addinneroperators` SourceKit key.
    case codecompleteAddinneroperators = "key.codecomplete.addinneroperators"
    /// The `key.codecomplete.addinitstotoplevel` SourceKit key.
    case codecompleteAddinitstotoplevel = "key.codecomplete.addinitstotoplevel"
    /// The `key.codecomplete.fuzzymatching` SourceKit key.
    case codecompleteFuzzymatching = "key.codecomplete.fuzzymatching"
    /// The `key.codecomplete.showtopnonliteralresults` SourceKit key.
    case codecompleteShowtopnonliteralresults = "key.codecomplete.showtopnonliteralresults"
    /// The `key.codecomplete.sort.contextweight` SourceKit key.
    case codecompleteSortContextweight = "key.codecomplete.sort.contextweight"
    /// The `key.codecomplete.sort.fuzzyweight` SourceKit key.
    case codecompleteSortFuzzyweight = "key.codecomplete.sort.fuzzyweight"
    /// The `key.codecomplete.sort.popularitybonus` SourceKit key.
    case codecompleteSortPopularitybonus = "key.codecomplete.sort.popularitybonus"
    /// The `key.codecomplete.annotateddescription` SourceKit key.
    case codecompleteAnnotateddescription = "key.codecomplete.annotateddescription"
    /// The `key.codecomplete.includeobjectliterals` SourceKit key.
    case codecompleteIncludeobjectliterals = "key.codecomplete.includeobjectliterals"
    /// The `key.editor.format.usetabs` SourceKit key.
    case editorFormatUsetabs = "key.editor.format.usetabs"
    /// The `key.editor.format.indentwidth` SourceKit key.
    case editorFormatIndentwidth = "key.editor.format.indentwidth"
    /// The `key.editor.format.tabwidth` SourceKit key.
    case editorFormatTabwidth = "key.editor.format.tabwidth"
    /// The `key.editor.format.indent_switch_case` SourceKit key.
    case editorFormatIndentSwitchCase = "key.editor.format.indent_switch_case"
    /// The `key.files` SourceKit key.
    case files = "key.files"
    /// The `key.name` SourceKit key.
    case name = "key.name"
    /// The `key.sourcefile` SourceKit key.
    case sourcefile = "key.sourcefile"
    /// The `key.sourcetext` SourceKit key.
    case sourcetext = "key.sourcetext"
    /// The `key.version_major` SourceKit key.
    case versionMajor = "key.version_major"
    /// The `key.version_minor` SourceKit key.
    case versionMinor = "key.version_minor"
    /// The `key.version_patch` SourceKit key.
    case versionPatch = "key.version_patch"
    /// The `key.results` SourceKit key.
    case results = "key.results"
    /// The `key.request` SourceKit key.
    case request = "key.request"
    /// The `key.notification` SourceKit key.
    case notification = "key.notification"
    /// The `key.kind` SourceKit key.
    case `kind` = "key.kind"
    /// The `key.accessibility` SourceKit key.
    case accessibility = "key.accessibility"
    /// The `key.setter_accessibility` SourceKit key.
    case setterAccessibility = "key.setter_accessibility"
    /// The `key.keyword` SourceKit key.
    case keyword = "key.keyword"
    /// The `key.usr` SourceKit key.
    case usr = "key.usr"
    /// The `key.original_usr` SourceKit key.
    case originalUsr = "key.original_usr"
    /// The `key.default_implementation_of` SourceKit key.
    case defaultImplementationOf = "key.default_implementation_of"
    /// The `key.interested_usr` SourceKit key.
    case interestedUsr = "key.interested_usr"
    /// The `key.generic_params` SourceKit key.
    case genericParams = "key.generic_params"
    /// The `key.generic_requirements` SourceKit key.
    case genericRequirements = "key.generic_requirements"
    /// The `key.doc.full_as_xml` SourceKit key.
    case docFullAsXml = "key.doc.full_as_xml"
    /// The `key.doc_comment` SourceKit key.
    case docComment = "key.doc_comment"
    /// The `key.line` SourceKit key.
    case `line` = "key.line"
    /// The `key.column` SourceKit key.
    case column = "key.column"
    /// The `key.receiver_usr` SourceKit key.
    case receiverUsr = "key.receiver_usr"
    /// The `key.receivers` SourceKit key.
    case receivers = "key.receivers"
    /// The `key.is_dynamic` SourceKit key.
    case isDynamic = "key.is_dynamic"
    /// The `key.is_implicit` SourceKit key.
    case isImplicit = "key.is_implicit"
    /// The `key.filepath` SourceKit key.
    case filepath = "key.filepath"
    /// The `key.module_interface_name` SourceKit key.
    case moduleInterfaceName = "key.module_interface_name"
    /// The `key.hash` SourceKit key.
    case hash = "key.hash"
    /// The `key.severity` SourceKit key.
    case severity = "key.severity"
    /// The `key.offset` SourceKit key.
    case offset = "key.offset"
    /// The `key.length` SourceKit key.
    case length = "key.length"
    /// The `key.primary_file` SourceKit key.
    case primaryFile = "key.primary_file"
    /// The `key.enablesyntaxmap` SourceKit key.
    case enablesyntaxmap = "key.enablesyntaxmap"
    /// The `key.enablesubstructure` SourceKit key.
    case enablesubstructure = "key.enablesubstructure"
    /// The `key.id` SourceKit key.
    case id = "key.id"
    /// The `key.description` SourceKit key.
    case description = "key.description"
    /// The `key.typename` SourceKit key.
    case typename = "key.typename"
    /// The `key.runtime_name` SourceKit key.
    case runtimeName = "key.runtime_name"
    /// The `key.selector_name` SourceKit key.
    case selectorName = "key.selector_name"
    /// The `key.annotated_decl` SourceKit key.
    case annotatedDecl = "key.annotated_decl"
    /// The `key.fully_annotated_decl` SourceKit key.
    case fullyAnnotatedDecl = "key.fully_annotated_decl"
    /// The `key.fully_annotated_generic_signature` SourceKit key.
    case fullyAnnotatedGenericSignature = "key.fully_annotated_generic_signature"
    /// The `key.doc.brief` SourceKit key.
    case docBrief = "key.doc.brief"
    /// The `key.context` SourceKit key.
    case context = "key.context"
    /// The `key.typerelation` SourceKit key.
    case typerelation = "key.typerelation"
    /// The `key.moduleimportdepth` SourceKit key.
    case moduleimportdepth = "key.moduleimportdepth"
    /// The `key.num_bytes_to_erase` SourceKit key.
    case numBytesToErase = "key.num_bytes_to_erase"
    /// The `key.not_recommended` SourceKit key.
    case notRecommended = "key.not_recommended"
    /// The `key.declarations` SourceKit key.
    case declarations = "key.declarations"
    /// The `key.enabledeclarations` SourceKit key.
    case enabledeclarations = "key.enabledeclarations"
    /// The `key.annotations` SourceKit key.
    case annotations = "key.annotations"
    /// The `key.semantic_tokens` SourceKit key.
    case semanticTokens = "key.semantic_tokens"
    /// The `key.diagnostic_stage` SourceKit key.
    case diagnosticStage = "key.diagnostic_stage"
    /// The `key.syntaxmap` SourceKit key.
    case syntaxmap = "key.syntaxmap"
    /// The `key.is_system` SourceKit key.
    case isSystem = "key.is_system"
    /// The `key.related` SourceKit key.
    case related = "key.related"
    /// The `key.inherits` SourceKit key.
    case inherits = "key.inherits"
    /// The `key.conforms` SourceKit key.
    case conforms = "key.conforms"
    /// The `key.extends` SourceKit key.
    case extends = "key.extends"
    /// The `key.dependencies` SourceKit key.
    case dependencies = "key.dependencies"
    /// The `key.entities` SourceKit key.
    case entities = "key.entities"
    /// The `key.nameoffset` SourceKit key.
    case nameoffset = "key.nameoffset"
    /// The `key.namelength` SourceKit key.
    case namelength = "key.namelength"
    /// The `key.bodyoffset` SourceKit key.
    case bodyoffset = "key.bodyoffset"
    /// The `key.bodylength` SourceKit key.
    case bodylength = "key.bodylength"
    /// The `key.docoffset` SourceKit key.
    case docoffset = "key.docoffset"
    /// The `key.doclength` SourceKit key.
    case doclength = "key.doclength"
    /// The `key.is_active` SourceKit key.
    case isActive = "key.is_active"
    /// The `key.is_local` SourceKit key.
    case isLocal = "key.is_local"
    /// The `key.inheritedtypes` SourceKit key.
    case inheritedtypes = "key.inheritedtypes"
    /// The `key.attributes` SourceKit key.
    case attributes = "key.attributes"
    /// The `key.attribute` SourceKit key.
    case attribute = "key.attribute"
    /// The `key.elements` SourceKit key.
    case elements = "key.elements"
    /// The `key.substructure` SourceKit key.
    case substructure = "key.substructure"
    /// The `key.ranges` SourceKit key.
    case ranges = "key.ranges"
    /// The `key.fixits` SourceKit key.
    case fixits = "key.fixits"
    /// The `key.generated_buffers` SourceKit key.
    case generatedBuffers = "key.generated_buffers"
    /// The `key.buffer_text` SourceKit key.
    case bufferText = "key.buffer_text"
    /// The `key.original_location` SourceKit key.
    case originalLocation = "key.original_location"
    /// The `key.diagnostics` SourceKit key.
    case diagnostics = "key.diagnostics"
    /// The `key.educational_note_paths` SourceKit key.
    case educationalNotePaths = "key.educational_note_paths"
    /// The `key.editor.format.options` SourceKit key.
    case editorFormatOptions = "key.editor.format.options"
    /// The `key.codecomplete.options` SourceKit key.
    case codecompleteOptions = "key.codecomplete.options"
    /// The `key.typecontextinfo.options` SourceKit key.
    case typecontextinfoOptions = "key.typecontextinfo.options"
    /// The `key.conformingmethods.options` SourceKit key.
    case conformingmethodsOptions = "key.conformingmethods.options"
    /// The `key.codecomplete.filterrules` SourceKit key.
    case codecompleteFilterrules = "key.codecomplete.filterrules"
    /// The `key.nextrequeststart` SourceKit key.
    case nextrequeststart = "key.nextrequeststart"
    /// The `key.popular` SourceKit key.
    case popular = "key.popular"
    /// The `key.unpopular` SourceKit key.
    case unpopular = "key.unpopular"
    /// The `key.hide` SourceKit key.
    case hide = "key.hide"
    /// The `key.platform` SourceKit key.
    case platform = "key.platform"
    /// The `key.is_deprecated` SourceKit key.
    case isDeprecated = "key.is_deprecated"
    /// The `key.is_unavailable` SourceKit key.
    case isUnavailable = "key.is_unavailable"
    /// The `key.is_optional` SourceKit key.
    case isOptional = "key.is_optional"
    /// The `key.is_async` SourceKit key.
    case isAsync = "key.is_async"
    /// The `key.message` SourceKit key.
    case `message` = "key.message"
    /// The `key.introduced` SourceKit key.
    case `introduced` = "key.introduced"
    /// The `key.deprecated` SourceKit key.
    case `deprecated` = "key.deprecated"
    /// The `key.obsoleted` SourceKit key.
    case `obsoleted` = "key.obsoleted"
    /// The `key.cancel_builds` SourceKit key.
    case cancelBuilds = "key.cancel_builds"
    /// The `key.removecache` SourceKit key.
    case removecache = "key.removecache"
    /// The `key.typeusr` SourceKit key.
    case typeusr = "key.typeusr"
    /// The `key.containertypeusr` SourceKit key.
    case containertypeusr = "key.containertypeusr"
    /// The `key.modulegroups` SourceKit key.
    case modulegroups = "key.modulegroups"
    /// The `key.basename` SourceKit key.
    case basename = "key.basename"
    /// The `key.argnames` SourceKit key.
    case argnames = "key.argnames"
    /// The `key.selectorpieces` SourceKit key.
    case selectorpieces = "key.selectorpieces"
    /// The `key.namekind` SourceKit key.
    case namekind = "key.namekind"
    /// The `key.localization_key` SourceKit key.
    case localizationKey = "key.localization_key"
    /// The `key.is_zero_arg_selector` SourceKit key.
    case isZeroArgSelector = "key.is_zero_arg_selector"
    /// The `key.swift_version` SourceKit key.
    case swiftVersion = "key.swift_version"
    /// The `key.value` SourceKit key.
    case value = "key.value"
    /// The `key.enablediagnostics` SourceKit key.
    case enablediagnostics = "key.enablediagnostics"
    /// The `key.groupname` SourceKit key.
    case groupname = "key.groupname"
    /// The `key.actionname` SourceKit key.
    case actionname = "key.actionname"
    /// The `key.synthesizedextensions` SourceKit key.
    case synthesizedextensions = "key.synthesizedextensions"
    /// The `key.usingswiftargs` SourceKit key.
    case usingswiftargs = "key.usingswiftargs"
    /// The `key.names` SourceKit key.
    case names = "key.names"
    /// The `key.uids` SourceKit key.
    case uids = "key.uids"
    /// The `key.syntactic_only` SourceKit key.
    case syntacticOnly = "key.syntactic_only"
    /// The `key.parent_loc` SourceKit key.
    case parentLoc = "key.parent_loc"
    /// The `key.is_test_candidate` SourceKit key.
    case isTestCandidate = "key.is_test_candidate"
    /// The `key.overrides` SourceKit key.
    case overrides = "key.overrides"
    /// The `key.associated_usrs` SourceKit key.
    case associatedUsrs = "key.associated_usrs"
    /// The `key.modulename` SourceKit key.
    case modulename = "key.modulename"
    /// The `key.related_decls` SourceKit key.
    case relatedDecls = "key.related_decls"
    /// The `key.simplified` SourceKit key.
    case simplified = "key.simplified"
    /// The `key.rangecontent` SourceKit key.
    case rangecontent = "key.rangecontent"
    /// The `key.cancel_on_subsequent_request` SourceKit key.
    case cancelOnSubsequentRequest = "key.cancel_on_subsequent_request"
    /// The `key.include_non_editable_base_names` SourceKit key.
    case includeNonEditableBaseNames = "key.include_non_editable_base_names"
    /// The `key.renamelocations` SourceKit key.
    case renamelocations = "key.renamelocations"
    /// The `key.locations` SourceKit key.
    case locations = "key.locations"
    /// The `key.nametype` SourceKit key.
    case nametype = "key.nametype"
    /// The `key.newname` SourceKit key.
    case newname = "key.newname"
    /// The `key.categorizededits` SourceKit key.
    case categorizededits = "key.categorizededits"
    /// The `key.categorizedranges` SourceKit key.
    case categorizedranges = "key.categorizedranges"
    /// The `key.rangesworthnote` SourceKit key.
    case rangesworthnote = "key.rangesworthnote"
    /// The `key.edits` SourceKit key.
    case edits = "key.edits"
    /// The `key.endline` SourceKit key.
    case endline = "key.endline"
    /// The `key.endcolumn` SourceKit key.
    case endcolumn = "key.endcolumn"
    /// The `key.argindex` SourceKit key.
    case argindex = "key.argindex"
    /// The `key.text` SourceKit key.
    case text = "key.text"
    /// The `key.category` SourceKit key.
    case category = "key.category"
    /// The `key.categories` SourceKit key.
    case categories = "key.categories"
    /// The `key.is_function_like` SourceKit key.
    case isFunctionLike = "key.is_function_like"
    /// The `key.is_non_protocol_type` SourceKit key.
    case isNonProtocolType = "key.is_non_protocol_type"
    /// The `key.refactor_actions` SourceKit key.
    case refactorActions = "key.refactor_actions"
    /// The `key.retrieve_refactor_actions` SourceKit key.
    case retrieveRefactorActions = "key.retrieve_refactor_actions"
    /// The `key.symbol_graph` SourceKit key.
    case symbolGraph = "key.symbol_graph"
    /// The `key.retrieve_symbol_graph` SourceKit key.
    case retrieveSymbolGraph = "key.retrieve_symbol_graph"
    /// The `key.parent_contexts` SourceKit key.
    case parentContexts = "key.parent_contexts"
    /// The `key.referenced_symbols` SourceKit key.
    case referencedSymbols = "key.referenced_symbols"
    /// The `key.is_spi` SourceKit key.
    case isSpi = "key.is_spi"
    /// The `key.actionuid` SourceKit key.
    case actionuid = "key.actionuid"
    /// The `key.actionunavailablereason` SourceKit key.
    case actionunavailablereason = "key.actionunavailablereason"
    /// The `key.compileid` SourceKit key.
    case compileid = "key.compileid"
    /// The `key.implicitmembers` SourceKit key.
    case implicitmembers = "key.implicitmembers"
    /// The `key.expectedtypes` SourceKit key.
    case expectedtypes = "key.expectedtypes"
    /// The `key.members` SourceKit key.
    case members = "key.members"
    /// The `key.printedtypebuffer` SourceKit key.
    case printedtypebuffer = "key.printedtypebuffer"
    /// The `key.expression_type_list` SourceKit key.
    case expressionTypeList = "key.expression_type_list"
    /// The `key.expression_offset` SourceKit key.
    case expressionOffset = "key.expression_offset"
    /// The `key.expression_length` SourceKit key.
    case expressionLength = "key.expression_length"
    /// The `key.expression_type` SourceKit key.
    case expressionType = "key.expression_type"
    /// The `key.variable_type_list` SourceKit key.
    case variableTypeList = "key.variable_type_list"
    /// The `key.variable_offset` SourceKit key.
    case variableOffset = "key.variable_offset"
    /// The `key.variable_length` SourceKit key.
    case variableLength = "key.variable_length"
    /// The `key.variable_type` SourceKit key.
    case variableType = "key.variable_type"
    /// The `key.variable_type_explicit` SourceKit key.
    case variableTypeExplicit = "key.variable_type_explicit"
    /// The `key.fully_qualified` SourceKit key.
    case fullyQualified = "key.fully_qualified"
    /// The `key.canonicalize_type` SourceKit key.
    case canonicalizeType = "key.canonicalize_type"
    /// The `key.internal_diagnostic` SourceKit key.
    case internalDiagnostic = "key.internal_diagnostic"
    /// The `key.vfs.name` SourceKit key.
    case vfsName = "key.vfs.name"
    /// The `key.vfs.options` SourceKit key.
    case vfsOptions = "key.vfs.options"
    /// The `key.optimize_for_ide` SourceKit key.
    case optimizeForIde = "key.optimize_for_ide"
    /// The `key.required_bystanders` SourceKit key.
    case requiredBystanders = "key.required_bystanders"
    /// The `key.reusingastcontext` SourceKit key.
    case reusingastcontext = "key.reusingastcontext"
    /// The `key.completion_max_astcontext_reuse_count` SourceKit key.
    case completionMaxAstcontextReuseCount = "key.completion_max_astcontext_reuse_count"
    /// The `key.completion_check_dependency_interval` SourceKit key.
    case completionCheckDependencyInterval = "key.completion_check_dependency_interval"
    /// The `key.annotated.typename` SourceKit key.
    case annotatedTypename = "key.annotated.typename"
    /// The `key.compile_operation` SourceKit key.
    case compileOperation = "key.compile_operation"
    /// The `key.effective_access` SourceKit key.
    case effectiveAccess = "key.effective_access"
    /// The `key.decl_lang` SourceKit key.
    case declLang = "key.decl_lang"
    /// The `key.secondary_symbols` SourceKit key.
    case secondarySymbols = "key.secondary_symbols"
    /// The `key.simulate_long_request` SourceKit key.
    case simulateLongRequest = "key.simulate_long_request"
    /// The `key.is_synthesized` SourceKit key.
    case isSynthesized = "key.is_synthesized"
    /// The `key.buffer_name` SourceKit key.
    case bufferName = "key.buffer_name"
    /// The `key.barriers_enabled` SourceKit key.
    case barriersEnabled = "key.barriers_enabled"
    /// The `key.expansions` SourceKit key.
    case expansions = "key.expansions"
    /// The `key.macro_roles` SourceKit key.
    case macroRoles = "key.macro_roles"
    /// The `key.expanded_macro_replacements` SourceKit key.
    case expandedMacroReplacements = "key.expanded_macro_replacements"
    /// The `key.index_store_path` SourceKit key.
    case indexStorePath = "key.index_store_path"
    /// The `key.index_unit_output_path` SourceKit key.
    case indexUnitOutputPath = "key.index_unit_output_path"
    /// The `key.include_locals` SourceKit key.
    case includeLocals = "key.include_locals"
    /// The `key.ignore_clang_modules` SourceKit key.
    case ignoreClangModules = "key.ignore_clang_modules"
    /// The `key.include_system_modules` SourceKit key.
    case includeSystemModules = "key.include_system_modules"
    /// The `key.ignore_stdlib` SourceKit key.
    case ignoreStdlib = "key.ignore_stdlib"
    /// The `key.disable_implicit_modules` SourceKit key.
    case disableImplicitModules = "key.disable_implicit_modules"
    /// The `key.compilerargs` SourceKit key.
    case compilerArgs = "key.compilerargs"

    @_spi(Macro)
    public static var caseMap: [String: String] {
        [
        "codecompleteSortByname": "key.codecomplete.sort.byname",
        "codecompleteSortUseimportdepth": "key.codecomplete.sort.useimportdepth",
        "codecompleteGroupOverloads": "key.codecomplete.group.overloads",
        "codecompleteGroupStems": "key.codecomplete.group.stems",
        "codecompleteFiltertext": "key.codecomplete.filtertext",
        "codecompleteRequestlimit": "key.codecomplete.requestlimit",
        "codecompleteRequeststart": "key.codecomplete.requeststart",
        "codecompleteHideunderscores": "key.codecomplete.hideunderscores",
        "codecompleteHidelowpriority": "key.codecomplete.hidelowpriority",
        "codecompleteHidebyname": "key.codecomplete.hidebyname",
        "codecompleteIncludeexactmatch": "key.codecomplete.includeexactmatch",
        "codecompleteAddinnerresults": "key.codecomplete.addinnerresults",
        "codecompleteAddinneroperators": "key.codecomplete.addinneroperators",
        "codecompleteAddinitstotoplevel": "key.codecomplete.addinitstotoplevel",
        "codecompleteFuzzymatching": "key.codecomplete.fuzzymatching",
        "codecompleteShowtopnonliteralresults": "key.codecomplete.showtopnonliteralresults",
        "codecompleteSortContextweight": "key.codecomplete.sort.contextweight",
        "codecompleteSortFuzzyweight": "key.codecomplete.sort.fuzzyweight",
        "codecompleteSortPopularitybonus": "key.codecomplete.sort.popularitybonus",
        "codecompleteAnnotateddescription": "key.codecomplete.annotateddescription",
        "codecompleteIncludeobjectliterals": "key.codecomplete.includeobjectliterals",
        "editorFormatUsetabs": "key.editor.format.usetabs",
        "editorFormatIndentwidth": "key.editor.format.indentwidth",
        "editorFormatTabwidth": "key.editor.format.tabwidth",
        "editorFormatIndentSwitchCase": "key.editor.format.indent_switch_case",
        "files": "key.files",
        "name": "key.name",
        "sourcefile": "key.sourcefile",
        "sourcetext": "key.sourcetext",
        "versionMajor": "key.version_major",
        "versionMinor": "key.version_minor",
        "versionPatch": "key.version_patch",
        "results": "key.results",
        "request": "key.request",
        "notification": "key.notification",
        "`kind`": "key.kind",
        "kind": "key.kind",
        "accessibility": "key.accessibility",
        "setterAccessibility": "key.setter_accessibility",
        "keyword": "key.keyword",
        "usr": "key.usr",
        "originalUsr": "key.original_usr",
        "defaultImplementationOf": "key.default_implementation_of",
        "interestedUsr": "key.interested_usr",
        "genericParams": "key.generic_params",
        "genericRequirements": "key.generic_requirements",
        "docFullAsXml": "key.doc.full_as_xml",
        "docComment": "key.doc_comment",
        "`line`": "key.line",
        "line": "key.line",
        "column": "key.column",
        "receiverUsr": "key.receiver_usr",
        "receivers": "key.receivers",
        "isDynamic": "key.is_dynamic",
        "isImplicit": "key.is_implicit",
        "filepath": "key.filepath",
        "moduleInterfaceName": "key.module_interface_name",
        "hash": "key.hash",
        "severity": "key.severity",
        "offset": "key.offset",
        "length": "key.length",
        "primaryFile": "key.primary_file",
        "enablesyntaxmap": "key.enablesyntaxmap",
        "enablesubstructure": "key.enablesubstructure",
        "id": "key.id",
        "description": "key.description",
        "typename": "key.typename",
        "runtimeName": "key.runtime_name",
        "selectorName": "key.selector_name",
        "annotatedDecl": "key.annotated_decl",
        "fullyAnnotatedDecl": "key.fully_annotated_decl",
        "fullyAnnotatedGenericSignature": "key.fully_annotated_generic_signature",
        "docBrief": "key.doc.brief",
        "context": "key.context",
        "typerelation": "key.typerelation",
        "moduleimportdepth": "key.moduleimportdepth",
        "numBytesToErase": "key.num_bytes_to_erase",
        "notRecommended": "key.not_recommended",
        "declarations": "key.declarations",
        "enabledeclarations": "key.enabledeclarations",
        "annotations": "key.annotations",
        "semanticTokens": "key.semantic_tokens",
        "diagnosticStage": "key.diagnostic_stage",
        "syntaxmap": "key.syntaxmap",
        "isSystem": "key.is_system",
        "related": "key.related",
        "inherits": "key.inherits",
        "conforms": "key.conforms",
        "extends": "key.extends",
        "dependencies": "key.dependencies",
        "entities": "key.entities",
        "nameoffset": "key.nameoffset",
        "namelength": "key.namelength",
        "bodyoffset": "key.bodyoffset",
        "bodylength": "key.bodylength",
        "docoffset": "key.docoffset",
        "doclength": "key.doclength",
        "isActive": "key.is_active",
        "isLocal": "key.is_local",
        "inheritedtypes": "key.inheritedtypes",
        "attributes": "key.attributes",
        "attribute": "key.attribute",
        "elements": "key.elements",
        "substructure": "key.substructure",
        "ranges": "key.ranges",
        "fixits": "key.fixits",
        "generatedBuffers": "key.generated_buffers",
        "bufferText": "key.buffer_text",
        "originalLocation": "key.original_location",
        "diagnostics": "key.diagnostics",
        "educationalNotePaths": "key.educational_note_paths",
        "editorFormatOptions": "key.editor.format.options",
        "codecompleteOptions": "key.codecomplete.options",
        "typecontextinfoOptions": "key.typecontextinfo.options",
        "conformingmethodsOptions": "key.conformingmethods.options",
        "codecompleteFilterrules": "key.codecomplete.filterrules",
        "nextrequeststart": "key.nextrequeststart",
        "popular": "key.popular",
        "unpopular": "key.unpopular",
        "hide": "key.hide",
        "platform": "key.platform",
        "isDeprecated": "key.is_deprecated",
        "isUnavailable": "key.is_unavailable",
        "isOptional": "key.is_optional",
        "isAsync": "key.is_async",
        "`message`": "key.message",
        "message": "key.message",
        "`introduced`": "key.introduced",
        "introduced": "key.introduced",
        "`deprecated`": "key.deprecated",
        "deprecated": "key.deprecated",
        "`obsoleted`": "key.obsoleted",
        "obsoleted": "key.obsoleted",
        "cancelBuilds": "key.cancel_builds",
        "removecache": "key.removecache",
        "typeusr": "key.typeusr",
        "containertypeusr": "key.containertypeusr",
        "modulegroups": "key.modulegroups",
        "basename": "key.basename",
        "argnames": "key.argnames",
        "selectorpieces": "key.selectorpieces",
        "namekind": "key.namekind",
        "localizationKey": "key.localization_key",
        "isZeroArgSelector": "key.is_zero_arg_selector",
        "swiftVersion": "key.swift_version",
        "value": "key.value",
        "enablediagnostics": "key.enablediagnostics",
        "groupname": "key.groupname",
        "actionname": "key.actionname",
        "synthesizedextensions": "key.synthesizedextensions",
        "usingswiftargs": "key.usingswiftargs",
        "names": "key.names",
        "uids": "key.uids",
        "syntacticOnly": "key.syntactic_only",
        "parentLoc": "key.parent_loc",
        "isTestCandidate": "key.is_test_candidate",
        "overrides": "key.overrides",
        "associatedUsrs": "key.associated_usrs",
        "modulename": "key.modulename",
        "relatedDecls": "key.related_decls",
        "simplified": "key.simplified",
        "rangecontent": "key.rangecontent",
        "cancelOnSubsequentRequest": "key.cancel_on_subsequent_request",
        "includeNonEditableBaseNames": "key.include_non_editable_base_names",
        "renamelocations": "key.renamelocations",
        "locations": "key.locations",
        "nametype": "key.nametype",
        "newname": "key.newname",
        "categorizededits": "key.categorizededits",
        "categorizedranges": "key.categorizedranges",
        "rangesworthnote": "key.rangesworthnote",
        "edits": "key.edits",
        "endline": "key.endline",
        "endcolumn": "key.endcolumn",
        "argindex": "key.argindex",
        "text": "key.text",
        "category": "key.category",
        "categories": "key.categories",
        "isFunctionLike": "key.is_function_like",
        "isNonProtocolType": "key.is_non_protocol_type",
        "refactorActions": "key.refactor_actions",
        "retrieveRefactorActions": "key.retrieve_refactor_actions",
        "symbolGraph": "key.symbol_graph",
        "retrieveSymbolGraph": "key.retrieve_symbol_graph",
        "parentContexts": "key.parent_contexts",
        "referencedSymbols": "key.referenced_symbols",
        "isSpi": "key.is_spi",
        "actionuid": "key.actionuid",
        "actionunavailablereason": "key.actionunavailablereason",
        "compileid": "key.compileid",
        "implicitmembers": "key.implicitmembers",
        "expectedtypes": "key.expectedtypes",
        "members": "key.members",
        "printedtypebuffer": "key.printedtypebuffer",
        "expressionTypeList": "key.expression_type_list",
        "expressionOffset": "key.expression_offset",
        "expressionLength": "key.expression_length",
        "expressionType": "key.expression_type",
        "variableTypeList": "key.variable_type_list",
        "variableOffset": "key.variable_offset",
        "variableLength": "key.variable_length",
        "variableType": "key.variable_type",
        "variableTypeExplicit": "key.variable_type_explicit",
        "fullyQualified": "key.fully_qualified",
        "canonicalizeType": "key.canonicalize_type",
        "internalDiagnostic": "key.internal_diagnostic",
        "vfsName": "key.vfs.name",
        "vfsOptions": "key.vfs.options",
        "optimizeForIde": "key.optimize_for_ide",
        "requiredBystanders": "key.required_bystanders",
        "reusingastcontext": "key.reusingastcontext",
        "completionMaxAstcontextReuseCount": "key.completion_max_astcontext_reuse_count",
        "completionCheckDependencyInterval": "key.completion_check_dependency_interval",
        "annotatedTypename": "key.annotated.typename",
        "compileOperation": "key.compile_operation",
        "effectiveAccess": "key.effective_access",
        "declLang": "key.decl_lang",
        "secondarySymbols": "key.secondary_symbols",
        "simulateLongRequest": "key.simulate_long_request",
        "isSynthesized": "key.is_synthesized",
        "bufferName": "key.buffer_name",
        "barriersEnabled": "key.barriers_enabled",
        "expansions": "key.expansions",
        "macroRoles": "key.macro_roles",
        "expandedMacroReplacements": "key.expanded_macro_replacements",
        "indexStorePath": "key.index_store_path",
        "indexUnitOutputPath": "key.index_unit_output_path",
        "includeLocals": "key.include_locals",
        "ignoreClangModules": "key.ignore_clang_modules",
        "includeSystemModules": "key.include_system_modules",
        "ignoreStdlib": "key.ignore_stdlib",
        "disableImplicitModules": "key.disable_implicit_modules",
        "compilerArgs": "key.compilerargs",
        ]
    }
}
