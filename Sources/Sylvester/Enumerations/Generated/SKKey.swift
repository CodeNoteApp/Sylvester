//  SKKey.swift
//  Sylvester ðŸ˜¼
//
//  Created by the 'generate_boilerplate.swift' script on 2023/04/15.

/// - Warning: This enumeration is generated by the 'generate_boilerplate.swift' script.
///            You can update this enumeration by running `make generate-boilerplate`.
public enum SKKey: String, Equatable, Codable, CaseIterable, SourceKitUID {
    /// The `key.accessibility` SourceKit key.
    case accessibility = "key.accessibility"
    /// The `key.actionname` SourceKit key.
    case actionname = "key.actionname"
    /// The `key.actionuid` SourceKit key.
    case actionuid = "key.actionuid"
    /// The `key.actionunavailablereason` SourceKit key.
    case actionunavailablereason = "key.actionunavailablereason"
    /// The `key.annotated.typename` SourceKit key.
    case annotatedTypename = "key.annotated.typename"
    /// The `key.annotated_decl` SourceKit key.
    case annotatedDecl = "key.annotated_decl"
    /// The `key.annotations` SourceKit key.
    case annotations = "key.annotations"
    /// The `key.argindex` SourceKit key.
    case argindex = "key.argindex"
    /// The `key.argnames` SourceKit key.
    case argnames = "key.argnames"
    /// The `key.associated_usrs` SourceKit key.
    case associatedUsrs = "key.associated_usrs"
    /// The `key.attribute` SourceKit key.
    case attribute = "key.attribute"
    /// The `key.attributes` SourceKit key.
    case attributes = "key.attributes"
    /// The `key.basename` SourceKit key.
    case basename = "key.basename"
    /// The `key.bodylength` SourceKit key.
    case bodylength = "key.bodylength"
    /// The `key.bodyoffset` SourceKit key.
    case bodyoffset = "key.bodyoffset"
    /// The `key.cancel_on_subsequent_request` SourceKit key.
    case cancelOnSubsequentRequest = "key.cancel_on_subsequent_request"
    /// The `key.canonicalize_type` SourceKit key.
    case canonicalizeType = "key.canonicalize_type"
    /// The `key.categories` SourceKit key.
    case categories = "key.categories"
    /// The `key.categorizededits` SourceKit key.
    case categorizededits = "key.categorizededits"
    /// The `key.categorizedranges` SourceKit key.
    case categorizedranges = "key.categorizedranges"
    /// The `key.category` SourceKit key.
    case category = "key.category"
    /// The `key.codecomplete.addinitstotoplevel` SourceKit key.
    case codecompleteAddinitstotoplevel = "key.codecomplete.addinitstotoplevel"
    /// The `key.codecomplete.addinneroperators` SourceKit key.
    case codecompleteAddinneroperators = "key.codecomplete.addinneroperators"
    /// The `key.codecomplete.addinnerresults` SourceKit key.
    case codecompleteAddinnerresults = "key.codecomplete.addinnerresults"
    /// The `key.codecomplete.annotateddescription` SourceKit key.
    case codecompleteAnnotateddescription = "key.codecomplete.annotateddescription"
    /// The `key.codecomplete.callpatternheuristics` SourceKit key.
    case codecompleteCallpatternheuristics = "key.codecomplete.callpatternheuristics"
    /// The `key.codecomplete.filterrules` SourceKit key.
    case codecompleteFilterrules = "key.codecomplete.filterrules"
    /// The `key.codecomplete.filtertext` SourceKit key.
    case codecompleteFiltertext = "key.codecomplete.filtertext"
    /// The `key.codecomplete.fuzzymatching` SourceKit key.
    case codecompleteFuzzymatching = "key.codecomplete.fuzzymatching"
    /// The `key.codecomplete.group.overloads` SourceKit key.
    case codecompleteGroupOverloads = "key.codecomplete.group.overloads"
    /// The `key.codecomplete.group.stems` SourceKit key.
    case codecompleteGroupStems = "key.codecomplete.group.stems"
    /// The `key.codecomplete.hidebyname` SourceKit key.
    case codecompleteHidebyname = "key.codecomplete.hidebyname"
    /// The `key.codecomplete.hidelowpriority` SourceKit key.
    case codecompleteHidelowpriority = "key.codecomplete.hidelowpriority"
    /// The `key.codecomplete.hideunderscores` SourceKit key.
    case codecompleteHideunderscores = "key.codecomplete.hideunderscores"
    /// The `key.codecomplete.includeexactmatch` SourceKit key.
    case codecompleteIncludeexactmatch = "key.codecomplete.includeexactmatch"
    /// The `key.codecomplete.includeobjectliterals` SourceKit key.
    case codecompleteIncludeobjectliterals = "key.codecomplete.includeobjectliterals"
    /// The `key.codecomplete.options` SourceKit key.
    case codecompleteOptions = "key.codecomplete.options"
    /// The `key.codecomplete.requestlimit` SourceKit key.
    case codecompleteRequestlimit = "key.codecomplete.requestlimit"
    /// The `key.codecomplete.requeststart` SourceKit key.
    case codecompleteRequeststart = "key.codecomplete.requeststart"
    /// The `key.codecomplete.showtopnonliteralresults` SourceKit key.
    case codecompleteShowtopnonliteralresults = "key.codecomplete.showtopnonliteralresults"
    /// The `key.codecomplete.sort.byname` SourceKit key.
    case codecompleteSortByname = "key.codecomplete.sort.byname"
    /// The `key.codecomplete.sort.contextweight` SourceKit key.
    case codecompleteSortContextweight = "key.codecomplete.sort.contextweight"
    /// The `key.codecomplete.sort.fuzzyweight` SourceKit key.
    case codecompleteSortFuzzyweight = "key.codecomplete.sort.fuzzyweight"
    /// The `key.codecomplete.sort.popularitybonus` SourceKit key.
    case codecompleteSortPopularitybonus = "key.codecomplete.sort.popularitybonus"
    /// The `key.codecomplete.sort.useimportdepth` SourceKit key.
    case codecompleteSortUseimportdepth = "key.codecomplete.sort.useimportdepth"
    /// The `key.column` SourceKit key.
    case column = "key.column"
    /// The `key.compile_operation` SourceKit key.
    case compileOperation = "key.compile_operation"
    /// The `key.compileid` SourceKit key.
    case compileid = "key.compileid"
    /// The `key.compilerargs` SourceKit key.
    case compilerargs = "key.compilerargs"
    /// The `key.compilerargs-string` SourceKit key.
    case compilerargsString = "key.compilerargs-string"
    /// The `key.completion_check_dependency_interval` SourceKit key.
    case completionCheckDependencyInterval = "key.completion_check_dependency_interval"
    /// The `key.completion_max_astcontext_reuse_count` SourceKit key.
    case completionMaxAstcontextReuseCount = "key.completion_max_astcontext_reuse_count"
    /// The `key.conformingmethods.options` SourceKit key.
    case conformingmethodsOptions = "key.conformingmethods.options"
    /// The `key.conforms` SourceKit key.
    case conforms = "key.conforms"
    /// The `key.containertypeusr` SourceKit key.
    case containertypeusr = "key.containertypeusr"
    /// The `key.context` SourceKit key.
    case context = "key.context"
    /// The `key.decl_lang` SourceKit key.
    case declLang = "key.decl_lang"
    /// The `key.default_implementation_of` SourceKit key.
    case defaultImplementationOf = "key.default_implementation_of"
    /// The `key.dependencies` SourceKit key.
    case dependencies = "key.dependencies"
    /// The `key.deprecated` SourceKit key.
    case deprecated = "key.deprecated"
    /// The `key.description` SourceKit key.
    case description = "key.description"
    /// The `key.diagnostic_stage` SourceKit key.
    case diagnosticStage = "key.diagnostic_stage"
    /// The `key.diagnostics` SourceKit key.
    case diagnostics = "key.diagnostics"
    /// The `key.doc.brief` SourceKit key.
    case docBrief = "key.doc.brief"
    /// The `key.doc.full_as_xml` SourceKit key.
    case docFullAsXml = "key.doc.full_as_xml"
    /// The `key.doclength` SourceKit key.
    case doclength = "key.doclength"
    /// The `key.docoffset` SourceKit key.
    case docoffset = "key.docoffset"
    /// The `key.editor.format.options` SourceKit key.
    case editorFormatOptions = "key.editor.format.options"
    /// The `key.edits` SourceKit key.
    case edits = "key.edits"
    /// The `key.educational_note_paths` SourceKit key.
    case educationalNotePaths = "key.educational_note_paths"
    /// The `key.effective_access` SourceKit key.
    case effectiveAccess = "key.effective_access"
    /// The `key.elements` SourceKit key.
    case elements = "key.elements"
    /// The `key.enablediagnostics` SourceKit key.
    case enablediagnostics = "key.enablediagnostics"
    /// The `key.enablesubstructure` SourceKit key.
    case enablesubstructure = "key.enablesubstructure"
    /// The `key.enablesyntaxmap` SourceKit key.
    case enablesyntaxmap = "key.enablesyntaxmap"
    /// The `key.endcolumn` SourceKit key.
    case endcolumn = "key.endcolumn"
    /// The `key.endline` SourceKit key.
    case endline = "key.endline"
    /// The `key.entities` SourceKit key.
    case entities = "key.entities"
    /// The `key.expectedtypes` SourceKit key.
    case expectedtypes = "key.expectedtypes"
    /// The `key.expression_length` SourceKit key.
    case expressionLength = "key.expression_length"
    /// The `key.expression_offset` SourceKit key.
    case expressionOffset = "key.expression_offset"
    /// The `key.expression_type` SourceKit key.
    case expressionType = "key.expression_type"
    /// The `key.expression_type_list` SourceKit key.
    case expressionTypeList = "key.expression_type_list"
    /// The `key.extends` SourceKit key.
    case extends = "key.extends"
    /// The `key.filepath` SourceKit key.
    case filepath = "key.filepath"
    /// The `key.files` SourceKit key.
    case files = "key.files"
    /// The `key.fixits` SourceKit key.
    case fixits = "key.fixits"
    /// The `key.fully_annotated_decl` SourceKit key.
    case fullyAnnotatedDecl = "key.fully_annotated_decl"
    /// The `key.fully_annotated_generic_signature` SourceKit key.
    case fullyAnnotatedGenericSignature = "key.fully_annotated_generic_signature"
    /// The `key.fully_qualified` SourceKit key.
    case fullyQualified = "key.fully_qualified"
    /// The `key.generic_params` SourceKit key.
    case genericParams = "key.generic_params"
    /// The `key.generic_requirements` SourceKit key.
    case genericRequirements = "key.generic_requirements"
    /// The `key.groupname` SourceKit key.
    case groupname = "key.groupname"
    /// The `key.hash` SourceKit key.
    case hash = "key.hash"
    /// The `key.hide` SourceKit key.
    case hide = "key.hide"
    /// The `key.id` SourceKit key.
    case id = "key.id"
    /// The `key.implicitmembers` SourceKit key.
    case implicitmembers = "key.implicitmembers"
    /// The `key.inheritedtypes` SourceKit key.
    case inheritedtypes = "key.inheritedtypes"
    /// The `key.inherits` SourceKit key.
    case inherits = "key.inherits"
    /// The `key.interested_usr` SourceKit key.
    case interestedUsr = "key.interested_usr"
    /// The `key.internal_diagnostic` SourceKit key.
    case internalDiagnostic = "key.internal_diagnostic"
    /// The `key.introduced` SourceKit key.
    case introduced = "key.introduced"
    /// The `key.is_async` SourceKit key.
    case isAsync = "key.is_async"
    /// The `key.is_deprecated` SourceKit key.
    case isDeprecated = "key.is_deprecated"
    /// The `key.is_dynamic` SourceKit key.
    case isDynamic = "key.is_dynamic"
    /// The `key.is_function_like` SourceKit key.
    case isFunctionLike = "key.is_function_like"
    /// The `key.is_implicit` SourceKit key.
    case isImplicit = "key.is_implicit"
    /// The `key.is_local` SourceKit key.
    case isLocal = "key.is_local"
    /// The `key.is_non_protocol_type` SourceKit key.
    case isNonProtocolType = "key.is_non_protocol_type"
    /// The `key.is_optional` SourceKit key.
    case isOptional = "key.is_optional"
    /// The `key.is_spi` SourceKit key.
    case isSpi = "key.is_spi"
    /// The `key.is_synthesized` SourceKit key.
    case isSynthesized = "key.is_synthesized"
    /// The `key.is_system` SourceKit key.
    case isSystem = "key.is_system"
    /// The `key.is_test_candidate` SourceKit key.
    case isTestCandidate = "key.is_test_candidate"
    /// The `key.is_unavailable` SourceKit key.
    case isUnavailable = "key.is_unavailable"
    /// The `key.is_zero_arg_selector` SourceKit key.
    case isZeroArgSelector = "key.is_zero_arg_selector"
    /// The `key.keyword` SourceKit key.
    case keyword = "key.keyword"
    /// The `key.kind` SourceKit key.
    case kind = "key.kind"
    /// The `key.length` SourceKit key.
    case length = "key.length"
    /// The `key.line` SourceKit key.
    case line = "key.line"
    /// The `key.localization_key` SourceKit key.
    case localizationKey = "key.localization_key"
    /// The `key.locations` SourceKit key.
    case locations = "key.locations"
    /// The `key.members` SourceKit key.
    case members = "key.members"
    /// The `key.message` SourceKit key.
    case message = "key.message"
    /// The `key.module_interface_name` SourceKit key.
    case moduleInterfaceName = "key.module_interface_name"
    /// The `key.modulegroups` SourceKit key.
    case modulegroups = "key.modulegroups"
    /// The `key.moduleimportdepth` SourceKit key.
    case moduleimportdepth = "key.moduleimportdepth"
    /// The `key.modulename` SourceKit key.
    case modulename = "key.modulename"
    /// The `key.name` SourceKit key.
    case name = "key.name"
    /// The `key.namekind` SourceKit key.
    case namekind = "key.namekind"
    /// The `key.namelength` SourceKit key.
    case namelength = "key.namelength"
    /// The `key.nameoffset` SourceKit key.
    case nameoffset = "key.nameoffset"
    /// The `key.names` SourceKit key.
    case names = "key.names"
    /// The `key.nametype` SourceKit key.
    case nametype = "key.nametype"
    /// The `key.newname` SourceKit key.
    case newname = "key.newname"
    /// The `key.nextrequeststart` SourceKit key.
    case nextrequeststart = "key.nextrequeststart"
    /// The `key.not_recommended` SourceKit key.
    case notRecommended = "key.not_recommended"
    /// The `key.notification` SourceKit key.
    case notification = "key.notification"
    /// The `key.num_bytes_to_erase` SourceKit key.
    case numBytesToErase = "key.num_bytes_to_erase"
    /// The `key.obsoleted` SourceKit key.
    case obsoleted = "key.obsoleted"
    /// The `key.offset` SourceKit key.
    case offset = "key.offset"
    /// The `key.optimize_for_ide` SourceKit key.
    case optimizeForIde = "key.optimize_for_ide"
    /// The `key.original_usr` SourceKit key.
    case originalUsr = "key.original_usr"
    /// The `key.overrides` SourceKit key.
    case overrides = "key.overrides"
    /// The `key.parent_contexts` SourceKit key.
    case parentContexts = "key.parent_contexts"
    /// The `key.parent_loc` SourceKit key.
    case parentLoc = "key.parent_loc"
    /// The `key.platform` SourceKit key.
    case platform = "key.platform"
    /// The `key.popular` SourceKit key.
    case popular = "key.popular"
    /// The `key.printedtypebuffer` SourceKit key.
    case printedtypebuffer = "key.printedtypebuffer"
    /// The `key.rangecontent` SourceKit key.
    case rangecontent = "key.rangecontent"
    /// The `key.ranges` SourceKit key.
    case ranges = "key.ranges"
    /// The `key.rangesworthnote` SourceKit key.
    case rangesworthnote = "key.rangesworthnote"
    /// The `key.receiver_usr` SourceKit key.
    case receiverUsr = "key.receiver_usr"
    /// The `key.receivers` SourceKit key.
    case receivers = "key.receivers"
    /// The `key.refactor_actions` SourceKit key.
    case refactorActions = "key.refactor_actions"
    /// The `key.referenced_symbols` SourceKit key.
    case referencedSymbols = "key.referenced_symbols"
    /// The `key.related` SourceKit key.
    case related = "key.related"
    /// The `key.related_decls` SourceKit key.
    case relatedDecls = "key.related_decls"
    /// The `key.removecache` SourceKit key.
    case removecache = "key.removecache"
    /// The `key.renamelocations` SourceKit key.
    case renamelocations = "key.renamelocations"
    /// The `key.request` SourceKit key.
    case request = "key.request"
    /// The `key.required_bystanders` SourceKit key.
    case requiredBystanders = "key.required_bystanders"
    /// The `key.results` SourceKit key.
    case results = "key.results"
    /// The `key.retrieve_refactor_actions` SourceKit key.
    case retrieveRefactorActions = "key.retrieve_refactor_actions"
    /// The `key.retrieve_symbol_graph` SourceKit key.
    case retrieveSymbolGraph = "key.retrieve_symbol_graph"
    /// The `key.reusingastcontext` SourceKit key.
    case reusingastcontext = "key.reusingastcontext"
    /// The `key.runtime_name` SourceKit key.
    case runtimeName = "key.runtime_name"
    /// The `key.secondary_symbols` SourceKit key.
    case secondarySymbols = "key.secondary_symbols"
    /// The `key.selector_name` SourceKit key.
    case selectorName = "key.selector_name"
    /// The `key.selectorpieces` SourceKit key.
    case selectorpieces = "key.selectorpieces"
    /// The `key.setter_accessibility` SourceKit key.
    case setterAccessibility = "key.setter_accessibility"
    /// The `key.severity` SourceKit key.
    case severity = "key.severity"
    /// The `key.simplified` SourceKit key.
    case simplified = "key.simplified"
    /// The `key.simulate_long_request` SourceKit key.
    case simulateLongRequest = "key.simulate_long_request"
    /// The `key.sourcefile` SourceKit key.
    case sourcefile = "key.sourcefile"
    /// The `key.sourcetext` SourceKit key.
    case sourcetext = "key.sourcetext"
    /// The `key.substructure` SourceKit key.
    case substructure = "key.substructure"
    /// The `key.swift_version` SourceKit key.
    case swiftVersion = "key.swift_version"
    /// The `key.symbol_graph` SourceKit key.
    case symbolGraph = "key.symbol_graph"
    /// The `key.syntactic_only` SourceKit key.
    case syntacticOnly = "key.syntactic_only"
    /// The `key.syntaxmap` SourceKit key.
    case syntaxmap = "key.syntaxmap"
    /// The `key.synthesizedextensions` SourceKit key.
    case synthesizedextensions = "key.synthesizedextensions"
    /// The `key.text` SourceKit key.
    case text = "key.text"
    /// The `key.typecontextinfo.options` SourceKit key.
    case typecontextinfoOptions = "key.typecontextinfo.options"
    /// The `key.typename` SourceKit key.
    case typename = "key.typename"
    /// The `key.typerelation` SourceKit key.
    case typerelation = "key.typerelation"
    /// The `key.typeusr` SourceKit key.
    case typeusr = "key.typeusr"
    /// The `key.uids` SourceKit key.
    case uids = "key.uids"
    /// The `key.unpopular` SourceKit key.
    case unpopular = "key.unpopular"
    /// The `key.usingswiftargs` SourceKit key.
    case usingswiftargs = "key.usingswiftargs"
    /// The `key.usr` SourceKit key.
    case usr = "key.usr"
    /// The `key.value` SourceKit key.
    case value = "key.value"
    /// The `key.variable_length` SourceKit key.
    case variableLength = "key.variable_length"
    /// The `key.variable_offset` SourceKit key.
    case variableOffset = "key.variable_offset"
    /// The `key.variable_type` SourceKit key.
    case variableType = "key.variable_type"
    /// The `key.variable_type_explicit` SourceKit key.
    case variableTypeExplicit = "key.variable_type_explicit"
    /// The `key.variable_type_list` SourceKit key.
    case variableTypeList = "key.variable_type_list"
    /// The `key.verifysolverbasedcursorinfo` SourceKit key.
    case verifysolverbasedcursorinfo = "key.verifysolverbasedcursorinfo"
    /// The `key.version_major` SourceKit key.
    case versionMajor = "key.version_major"
    /// The `key.version_minor` SourceKit key.
    case versionMinor = "key.version_minor"
    /// The `key.version_patch` SourceKit key.
    case versionPatch = "key.version_patch"
    /// The `key.vfs.name` SourceKit key.
    case vfsName = "key.vfs.name"
    /// The `key.vfs.options` SourceKit key.
    case vfsOptions = "key.vfs.options"
}
