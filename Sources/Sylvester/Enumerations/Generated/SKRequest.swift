//  SKRequest.swift
//  Sylvester ðŸ˜¼
//
//  Created by the 'generate_boilerplate.swift' script on 2025/08/30.

/// - Warning: This enumeration is generated by the 'generate_boilerplate.swift' script.
///            You can update this enumeration by running `make generate-boilerplate`.
public enum SKRequest: String, Equatable, Codable, CaseIterable, SourceKitUID {
    /// The `source.request.protocol_version` SourceKit key.
    case protocolVersion = "source.request.protocol_version"
    /// The `source.request.compiler_version` SourceKit key.
    case compilerVersion = "source.request.compiler_version"
    /// The `source.request.crash_exit` SourceKit key.
    case crashExit = "source.request.crash_exit"
    /// The `source.request.demangle` SourceKit key.
    case demangle = "source.request.demangle"
    /// The `source.request.mangle_simple_class` SourceKit key.
    case mangleSimpleClass = "source.request.mangle_simple_class"
    /// The `source.request.indexsource` SourceKit key.
    case indexsource = "source.request.indexsource"
    /// The `source.request.docinfo` SourceKit key.
    case docinfo = "source.request.docinfo"
    /// The `source.request.codecomplete` SourceKit key.
    case codecomplete = "source.request.codecomplete"
    /// The `source.request.codecomplete.open` SourceKit key.
    case codecompleteOpen = "source.request.codecomplete.open"
    /// The `source.request.codecomplete.close` SourceKit key.
    case codecompleteClose = "source.request.codecomplete.close"
    /// The `source.request.codecomplete.update` SourceKit key.
    case codecompleteUpdate = "source.request.codecomplete.update"
    /// The `source.request.codecomplete.cache.ondisk` SourceKit key.
    case codecompleteCacheOndisk = "source.request.codecomplete.cache.ondisk"
    /// The `source.request.codecomplete.setpopularapi` SourceKit key.
    case codecompleteSetpopularapi = "source.request.codecomplete.setpopularapi"
    /// The `source.request.codecomplete.setcustom` SourceKit key.
    case codecompleteSetcustom = "source.request.codecomplete.setcustom"
    /// The `source.request.typecontextinfo` SourceKit key.
    case typecontextinfo = "source.request.typecontextinfo"
    /// The `source.request.conformingmethods` SourceKit key.
    case conformingmethods = "source.request.conformingmethods"
    /// The `source.request.activeregions` SourceKit key.
    case activeregions = "source.request.activeregions"
    /// The `source.request.cursorinfo` SourceKit key.
    case cursorinfo = "source.request.cursorinfo"
    /// The `source.request.rangeinfo` SourceKit key.
    case rangeinfo = "source.request.rangeinfo"
    /// The `source.request.relatedidents` SourceKit key.
    case relatedidents = "source.request.relatedidents"
    /// The `source.request.editor.open` SourceKit key.
    case editorOpen = "source.request.editor.open"
    /// The `source.request.editor.open.interface` SourceKit key.
    case editorOpenInterface = "source.request.editor.open.interface"
    /// The `source.request.editor.open.interface.header` SourceKit key.
    case editorOpenInterfaceHeader = "source.request.editor.open.interface.header"
    /// The `source.request.editor.open.interface.swiftsource` SourceKit key.
    case editorOpenInterfaceSwiftsource = "source.request.editor.open.interface.swiftsource"
    /// The `source.request.editor.open.interface.swifttype` SourceKit key.
    case editorOpenInterfaceSwifttype = "source.request.editor.open.interface.swifttype"
    /// The `source.request.editor.extract.comment` SourceKit key.
    case editorExtractComment = "source.request.editor.extract.comment"
    /// The `source.request.editor.close` SourceKit key.
    case editorClose = "source.request.editor.close"
    /// The `source.request.editor.replacetext` SourceKit key.
    case editorReplacetext = "source.request.editor.replacetext"
    /// The `source.request.editor.formattext` SourceKit key.
    case editorFormattext = "source.request.editor.formattext"
    /// The `source.request.editor.expand_placeholder` SourceKit key.
    case editorExpandPlaceholder = "source.request.editor.expand_placeholder"
    /// The `source.request.editor.find_usr` SourceKit key.
    case editorFindUsr = "source.request.editor.find_usr"
    /// The `source.request.editor.find_interface_doc` SourceKit key.
    case editorFindInterfaceDoc = "source.request.editor.find_interface_doc"
    /// The `source.request.buildsettings.register` SourceKit key.
    case buildsettingsRegister = "source.request.buildsettings.register"
    /// The `source.request.module.groups` SourceKit key.
    case moduleGroups = "source.request.module.groups"
    /// The `source.request.name.translation` SourceKit key.
    case nameTranslation = "source.request.name.translation"
    /// The `source.request.convert.markup.xml` SourceKit key.
    case convertMarkupXml = "source.request.convert.markup.xml"
    /// The `source.request.statistics` SourceKit key.
    case statistics = "source.request.statistics"
    /// The `source.request.find-syntactic-rename-ranges` SourceKit key.
    case findSyntacticRenameRanges = "source.request.find-syntactic-rename-ranges"
    /// The `source.request.find-local-rename-ranges` SourceKit key.
    case findLocalRenameRanges = "source.request.find-local-rename-ranges"
    /// The `source.request.semantic.refactoring` SourceKit key.
    case semanticRefactoring = "source.request.semantic.refactoring"
    /// The `source.request.enable-compile-notifications` SourceKit key.
    case enableCompileNotifications = "source.request.enable-compile-notifications"
    /// The `source.request.test_notification` SourceKit key.
    case testNotification = "source.request.test_notification"
    /// The `source.request.expression.type` SourceKit key.
    case expressionType = "source.request.expression.type"
    /// The `source.request.variable.type` SourceKit key.
    case variableType = "source.request.variable.type"
    /// The `source.request.configuration.global` SourceKit key.
    case configurationGlobal = "source.request.configuration.global"
    /// The `source.request.dependency_updated` SourceKit key.
    case dependencyUpdated = "source.request.dependency_updated"
    /// The `source.request.diagnostics` SourceKit key.
    case diagnostics = "source.request.diagnostics"
    /// The `source.request.semantic_tokens` SourceKit key.
    case semanticTokens = "source.request.semantic_tokens"
    /// The `source.request.compile` SourceKit key.
    case compile = "source.request.compile"
    /// The `source.request.compile.close` SourceKit key.
    case compileClose = "source.request.compile.close"
    /// The `source.request.enable_request_barriers` SourceKit key.
    case enableRequestBarriers = "source.request.enable_request_barriers"
    /// The `source.request.syntactic_macro_expansion` SourceKit key.
    case syntacticMacroExpansion = "source.request.syntactic_macro_expansion"
    /// The `source.request.index_to_store` SourceKit key.
    case indexToStore = "source.request.index_to_store"
}
