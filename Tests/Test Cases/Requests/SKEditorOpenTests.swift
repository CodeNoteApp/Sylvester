//
//  SKEditorOpenTests.swift
//  Sylvester Tests ðŸ˜¼
//
//  Created by Chris Zielinski on 12/3/18.
//  Copyright Â© 2018 Big Z Labs. All rights reserved.
//

import XCTest
#if XPC
@testable import SylvesterXPC
#else
@testable import Sylvester
#endif

class SKEditorOpenTests: SylvesterTestCase {

    // MARK: - Test Methods

    func testViewController() throws {
        let editorOpenResponse = try sendEditorOpenRequest(for: .viewController)
        try SylvesterAssert(editorOpenResponse,
                            equalsTestFixture: .viewControllerEditorOpenMustache,
                            filePath: filePath(for: .viewController))

        let byteRange = editorOpenResponse.byteRange
        XCTAssertEqual(byteRange.location, editorOpenResponse.offset)
        XCTAssertEqual(byteRange.length, editorOpenResponse.length)
    }

    func testPlaceholders() throws {
        let editorOpenResponse = try sendEditorOpenRequest(for: .placeholders)
        try SylvesterAssert(editorOpenResponse,
                            equalsTestFixture: .placeholdersEditorOpenMustache,
                            filePath: filePath(for: .placeholders))
    }

    func testAProtocol() throws {
        let editorOpenResponse = try sendEditorOpenRequest(for: .aProtocol)
        try SylvesterAssert(editorOpenResponse,
                            equalsTestFixture: .aProtocolEditorOpenMustache,
                            filePath: filePath(for: .aProtocol))
    }

    func testDocSupportInputsMain() throws {
        let editorOpenResponse = try sendEditorOpenRequest(for: .docSupportInputsMain)
        try SylvesterAssert(editorOpenResponse,
                            equalsTestFixture: .docSupportInputsMainEditorOpenMustache,
                            filePath: filePath(for: .docSupportInputsMain))
    }

    // MARK: - Test Helper Methods

    func sendEditorOpenRequest(for sourceFile: SourceFile) throws -> SKEditorOpen {
        return try SKEditorOpen(filePath: filePath(for: sourceFile))
    }

}
